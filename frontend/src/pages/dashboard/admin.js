import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import Container from '@mui/material/Container';
import 'bootstrap/dist/css/bootstrap.min.css';
import { useRouter } from 'next/router';
import isLoggedIn from '../isLoggedIn';
import { CircularProgress } from '@mui/material';
import CollapsibleTable from '@/components/table/CollapsibleTable';
import { getAllTickets } from '@/apiRequests/tickets/getAllTickets';
import PersistentDrawerLeft from '@/components/DrawerNavigation';
import AddTicketModal from '@/components/modal/AddTicketModal';

const AdminDashboard = () => {    

  const router = useRouter();
  const [showProgress, setShowProgress] = useState(false);
  const [loading, setLoading] = useState(true);
  const [ticketTableData, setTicketTableData] = useState(null)
  const [modalOpen, setModalOpen] = useState(false);  

  useEffect(() => {

    const ini = async () => {

      // CHECK USERS VALIDITY
      const isAuthrorized = await isLoggedIn();      
      if (!isAuthrorized[0]) {
        await router.replace('/');      
      }
      else {
        
        if (isAuthrorized[1].toString() !== 'Admin') {
          await router.replace(`/dashboard/${isAuthrorized[1].toString().toLowerCase()}`);
        } else {
          setLoading(false);
        }
      }      

      const getTickets = await getAllTickets();
      console.log("-- GETTING ALL TICKETS --")
      console.log(getTickets);

      setTicketTableData(getTickets[1]);      

    };
    ini();

  }, []);

  const onLogout = () => {

    setShowProgress(true)

    localStorage.removeItem('email');
    localStorage.removeItem('password');
    localStorage.removeItem('role');              

    setTimeout(async () => {
      await router.push('/');
      setShowProgress(false);      
    }, 1000);
  };

  const onAddTicket = () => {
    console.log("FROM ADMIN");
    setModalOpen(true);
  } 

  return (
    !loading   && (
      <>
      {showProgress && (
          <div
            style={{
              position: 'fixed',
              top: 0,
              left: 0,
              width: '100%',
              height: '100%',
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              background: 'rgba(0, 0, 0, 0.5)',
              zIndex: 9999,
            }}
          >
            <CircularProgress color="warning" size="5rem" thickness={5}/>
          </div>
          )}
        <Head>      
          <title>Service Charge</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/appLogoWhite.ico" />        
        </Head>                
        <AddTicketModal modalOpen={modalOpen} setModalOpen={setModalOpen} />     
        <PersistentDrawerLeft onLogout={onLogout}>        
        <button className='btn btn-dark' onClick={onAddTicket}>Add Ticket</button>
        <div className='d-flex w-100'>
            {ticketTableData !== null && (
              <CollapsibleTable data={ticketTableData} />
            )}
        </div>          
        </PersistentDrawerLeft>
      </>
    )
  );
};

export default AdminDashboard;
